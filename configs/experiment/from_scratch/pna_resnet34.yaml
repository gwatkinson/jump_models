# @package _global_

defaults:
  - override /data: jump_cl.yaml
  - override /model: jump_cl.yaml
  - override /model/image_encoder: resnet34.yaml
  - override /model/molecule_encoder: pna.yaml
  - override /model/criterion: ntxent_reg.yaml
  - override /model/optimizer: adamw.yaml
  - override /model/scheduler: cosine_annealing_with_warmup.yaml
  - override /callbacks: default.yaml
  - override /trainer: gpu.yaml
  - override /logger: many_loggers.yaml
  - override /eval: evaluators.yaml


# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

tags:
  - big_images
  - from_scratch
  - med_jump_cl
  - pna
  - resnet
  - ${model.molecule_encoder.pretrained_name}
  - ${model.image_encoder.instance_model_name}

seed: 12345

compile: False

evaluate: True


model:
  embedding_dim: 512
  lr: 3e-4

  image_encoder:
    pretrained: False

  scheduler:
    warmup_epochs: 10
    max_epochs: ${trainer.max_epochs}

  criterion:
    temperature: 0.5
    alpha: 0.05
    mse_reg: 0.1
    l1_reg: 0.1
    uniformity_reg: 0
    variance_reg: 1
    covariance_reg: 0.25

  example_input_path: null



data:
  batch_size: 64
  num_workers: 24
  prefetch_factor: 2
  drop_last: True

  transform:
    size: 512

  splitter:
    train: 32_768
    test: 8192
    val: 4096
    retrieval: 4096

  split_path: ${paths.split_path}/scaffold_split/
  train_ids_name: train_med


trainer:
  min_epochs: 5
  max_epochs: 100
  log_every_n_steps: 1
  # gradient_clip_val: 0.5
  num_sanity_val_steps: 1
  # reload_dataloaders_every_n_epochs: 1

  devices: ???


callbacks:
  wandb_watcher:
    log_freq: 100
    watch_log: all

  early_stopping:
    monitor: "val/loss"
    patience: 25
    min_delta: 0
    mode: "min"

logger:
  wandb:
    tags: ${tags}
    project: "from_scratch"
    group: null
    job_type: ""
    log_model: True

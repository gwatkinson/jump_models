# @package _global_

defaults:
  - override /data: jump_cl.yaml
  - override /model: jump_cl.yaml
  - override /model/image_encoder: resnet34.yaml
  - override /model/molecule_encoder: pna_pretrained.yaml
  - override /model/criterion: ntxent.yaml
  - override /model/optimizer: adamw.yaml
  - override /model/scheduler: cosine_annealing_with_warmup.yaml
  - override /callbacks: default.yaml
  - override /trainer: gpu.yaml  # TODO -> change to ddp ??
  - override /logger: many_loggers.yaml
  - override /eval: fast.yaml


tags:
  - final_experiments
  - pretrained
  - ntxent
  - batch_size_experiment
  - single_view
  - med_data
  - resnet34
  - pna

seed: 12345

compile: False

evaluate: False

model:
  embedding_dim: 128  # TODO: check if default should be 128 or 256 or 512
  lr: 3e-4

  scheduler:
    warmup_epochs: 10
    max_epochs: ${trainer.max_epochs}

  example_input_path: null


data:
  batch_size: 1024
  num_workers: 8
  prefetch_factor: 2
  drop_last: True

  transform:
    size: 512

  splitter:
    train: 32_768
    test: 8192
    val: 4096
    retrieval: 4096

  split_path: ${paths.split_path}/scaffold_split/
  train_ids_name: train_med


trainer:
  min_epochs: 0
  max_epochs: 100
  log_every_n_steps: 1
  num_sanity_val_steps: 1
  # gradient_clip_val: 0.5
  # reload_dataloaders_every_n_epochs: 1

  devices: ???


callbacks:
  wandb_watcher:
    log_freq: 100
    watch_log: all

  early_stopping:
    monitor: "val/loss"
    patience: 25
    min_delta: 0
    mode: "min"



logger:
  wandb:
    tags: ${tags}
    project: "final_experiments"
    name: "med_batch_size_1024"
    group: batch_size_experiment
    job_type: ""
    log_model: True
